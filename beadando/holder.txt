Ebbe a fileba jönnek azok a segítségek, melyeket az interneten 
találtam, és felhasználok. A file ténylegesen "holding" szerepet 
tölt be.

#Csatolása a windows shared mappáknak, ahonnan commitolok windowsról
sudo vmhgfs-fuse .host:/ /mnt/hgfs/ -o allow_other -o uid=1000 //ezzel a kommanddal lett beállítva


Karakter kurzol mozgatása promton:
https://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html
\033[<N>A


#\033[L;CH          kocsi pozicióba mozgatása, Sor; Oszlop koordináták
#\033[L;Cf          ugyan az de más a vége, ezt is kipróbálom
#\033[K             sor végének törlése!
#\033[2J            minden törlése, 0,0 pozira ugratja a kurzort
#echo -e 'clear; \033c\e[3J'        működő képernyő törlése!
# ^[[A felfele
# ^[[B lefele
# ^[[C jobbra
# ^[[D ballra

Használt kód tartó:
#printf "%s \n" "${char[1]}"


#printf "%s \n" "$username"         #tesztelésre kell csak

#printf "%s /t" "${char[1]}"         #13 sor van 

echo "${startPoz[0]}"
echo "${startPoz[1]}"
echo "${startPoz[2]}"
echo "${startPoz[3]}"

#startPoz_X1=${msg:0:distances[0]}
#startPoz_X1=$((${#startPoz_X1}/2))

#startPoz_X2=${msg:separatorok[0]:distances[1]}
#startPoz_X2=$((${#startPoz_X2}/2))

#startPoz_X3=${msg:separatorok[1]:distances[2]}
#startPoz_X3=$((${#startPoz_X3}/2))

#startPoz_X4=${msg:separatorok[2]:distances[3]}
#startPoz_X4=$((${#startPoz_X4}/2))


#printf "%s\n" "$startPoz_X1" 
#printf "%s\n" "$startPoz_X2" 
#printf "%s\n" "$startPoz_X3" 
#printf "%s\n" "$startPoz_X4" 

printf "%s %d \n" "$midWidth" "$midHeight"


 #echo -en "\033[$((midHeight-3));$((startPoz_egy))H"
        #echo "test behúzás"

        #\033[L;CH  $startPoz_egy
        #ezen a ponton még mindig tiszta a terminál a kezdeti törlés után!
        #nem kell 0,0-ra állítani a kurzort, hisz ott van!
        #echo -en "\033[4;$((szam-3))H"
        #\033[1A down
        #\033[1C forward

    #echo -en "\033[1;1H"            #terminál kocsi 1,1-es helyre ugratása festés után

helyez_Y=$((helyez_Y-2))                     #2-vel lépünk felfele, ez 1 labda magassága és 1 sor magassága - alapvetően a labda feletti sor bal felső karakterén állunk          
echo -en "\033[$((helyez_Y));$((helyez_X))H" #visszalépés a 12-es X koordinátára ugyan abban a sorban

helyez_Y=$((helyez_Y+2))                 #pozíció értékének csökkentése, ha még tudunk felfele lépni!           
echo -en "\033[$((helyez_Y));$((helyez_X))H"     #visszalépés a 12-es X koordinátára ugyan abban a sorban
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

function AimLower() {   #újrarajzolni részeket!
    #fontos: lehet, hogy nem lesz szép mert flickerelni fog, ebben az esetben
    #lehet próbálkozni pl: képernyő befagyasztással, vagy teljes újrarajzolással...

    #először törölni az eddigit:
    #felső elemek törlése
    echo -en "${palya_elemek[szunet]}${palya_elemek[szunet]}${palya_elemek[szunet]}"

    #középső sor, bal rövid rész törlése
    echo -en "\033[$((helyez_Y+1));$((helyez_X))H"
    echo -en "${palya_elemek[szunet]}"

    #középső sor, jobb rövid rész törlése
    echo -en "\033[$((helyez_Y+1));$((helyez_X+4))H"
    echo -en "${palya_elemek[szunet]}"

    #-> nincs +2-es nyomtatás, hiszen az alsó a kövi felsője lesz!

    #utána felrajzolni a következőt:
    helyez_Y=$((helyez_Y+2))

    #középső sor, bal rövid rész írása
    echo -en "\033[$((helyez_Y+1));$((helyez_X))H"
    echo -en "${palya_elemek[celrovid]}"

    #középső sor, jobb rövid rész írása
    echo -en "\033[$((helyez_Y+1));$((helyez_X+4))H"
    echo -en "${palya_elemek[celrovid]}"

    #also sor, hosszú 6-as írása
    echo -en "\033[$((helyez_Y+2));$((helyez_X))H"
    echo -en "${palya_elemek[celhosszu]}"
    
    echo -resn "$helyez_Y"; 
}

echo $helyez_Y
echo $Y_null
echo $Y_max

echo 

echo $helyez_X
echo $X_null
echo $X_max